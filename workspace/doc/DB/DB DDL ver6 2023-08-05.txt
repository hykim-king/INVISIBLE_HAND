DROP INDEX PK_Common_Code_Table;

/* 공통 코드 테이블 */
DROP TABLE Common_Code_Table 
	CASCADE CONSTRAINTS;

/* 공통 코드 테이블 */
CREATE TABLE Common_Code_Table (
	MasterCode VARCHAR2(100) NOT NULL, /* 마스터코드 */
	CodeDetail VARCHAR2(10) NOT NULL, /* 상세코드 */
	MasterCodeName VARCHAR2(300) NOT NULL, /* 마스터코드명 */
	CodeDetailName VARCHAR2(50) NOT NULL, /* 상세코드명 */
	CodeOrder NUMBER(2) NOT NULL, /* 순서 */
	IsUsed VARCHAR2(1 BYTE) DEFAULT 'Y'
);

COMMENT ON TABLE Common_Code_Table IS '공통 코드 테이블';

COMMENT ON COLUMN Common_Code_Table.MasterCode IS 'ex)CategoryNumber';

COMMENT ON COLUMN Common_Code_Table.CodeDetail IS 'ex)10';

COMMENT ON COLUMN Common_Code_Table.MasterCodeName IS 'ex)카테고리 번호';

COMMENT ON COLUMN Common_Code_Table.CodeDetailName IS 'ex)자유게시판';

COMMENT ON COLUMN Common_Code_Table.CodeOrder IS 'ex)10';

COMMENT ON COLUMN Common_Code_Table.IsUsed IS 'Y/N 기본값 Y';

CREATE UNIQUE INDEX PK_Common_Code_Table
	ON Common_Code_Table (
		MasterCode ASC,
		CodeDetail ASC
	);

ALTER TABLE Common_Code_Table
	ADD
		CONSTRAINT PK_Common_Code_Table
		PRIMARY KEY (
			MasterCode,
			CodeDetail
		);
		
DROP INDEX PK_Authentication;

/* 인증 테이블 */
DROP TABLE Authentication 
	CASCADE CONSTRAINTS;

/* 인증 테이블 */
CREATE TABLE Authentication (
	AuthNumber VARCHAR2(6 BYTE) NOT NULL, /* 인증 번호 */
	Email VARCHAR2(50 BYTE) NOT NULL, /* 이메일 */
	ExpiryTime DATE DEFAULT SYSDATE, /* 제한 시간 */
	RequestTime DATE DEFAULT SYSDATE, /* 인증 요청 시간 */
	AuthenticationStatus VARCHAR2(1 BYTE) DEFAULT 'N'
);

COMMENT ON TABLE Authentication IS '인증 테이블';

COMMENT ON COLUMN Authentication.AuthNumber IS '인증 번호';

COMMENT ON COLUMN Authentication.Email IS '이메일';

COMMENT ON COLUMN Authentication.ExpiryTime IS '제한 시간';

COMMENT ON COLUMN Authentication.RequestTime IS '인증 요청 시간';

COMMENT ON COLUMN Authentication.AuthenticationStatus IS 'Y/N 기본값 N';

CREATE UNIQUE INDEX PK_Authentication
	ON Authentication (
		AuthNumber ASC
	);

ALTER TABLE Authentication
	ADD
		CONSTRAINT PK_Authentication
		PRIMARY KEY (
			AuthNumber
		);
		
		DROP INDEX PK_Board;

DROP INDEX PK_Board;

/* 게시판 */
DROP TABLE Board 
	CASCADE CONSTRAINTS;

/* 게시판 */
CREATE TABLE Board (
	PostNumber NUMBER(10) NOT NULL, /* 글번호 */
	Nickname VARCHAR2(24 BYTE) NOT NULL, /* 닉네임 */
	Title VARCHAR2(300 BYTE) NOT NULL, /* 글제목 */
	Content CLOB NOT NULL, /* 내용 */
	WrittenDate DATE DEFAULT SYSDATE, /* 작성일 */
	Likes NUMBER(10) DEFAULT 0, /* 추천수 */
	Views NUMBER(10) DEFAULT 0, /* 조회수 */
	CategoryNumber VARCHAR2(10) NOT NULL /* 카테고리 번호 */
);

COMMENT ON TABLE Board IS '게시판';

COMMENT ON COLUMN Board.PostNumber IS '글번호';

COMMENT ON COLUMN Board.Nickname IS '닉네임';

COMMENT ON COLUMN Board.Title IS '글제목';

COMMENT ON COLUMN Board.Content IS '내용';

COMMENT ON COLUMN Board.WrittenDate IS '작성일';

COMMENT ON COLUMN Board.Likes IS '기본값 0';

COMMENT ON COLUMN Board.Views IS '기본값 0';

COMMENT ON COLUMN Board.CategoryNumber IS '카테고리 번호';

CREATE UNIQUE INDEX PK_Board
	ON Board (
		PostNumber ASC
	);

ALTER TABLE Board
	ADD
		CONSTRAINT PK_Board
		PRIMARY KEY (
			PostNumber
		);

/* 등급 정보 */
DROP TABLE Grade_Information 
	CASCADE CONSTRAINTS;

/* 등급 정보 */
CREATE TABLE Grade_Information (
	MemberGrade VARCHAR2(1 BYTE) NOT NULL, /* 회원 등급 */
	MemberGradeName VARCHAR2(18 BYTE) NOT NULL, /* 회원 등급 이름 */
	Logo VARCHAR2(300 BYTE) NOT NULL, /* 로고 */
	SubscriptionPrice NUMBER(5) NOT NULL /* 구독 가격 */
);

COMMENT ON TABLE Grade_Information IS '등급 정보';

COMMENT ON COLUMN Grade_Information.MemberGrade IS '회원 등급';

COMMENT ON COLUMN Grade_Information.MemberGradeName IS '회원 등급 이름';

COMMENT ON COLUMN Grade_Information.Logo IS '로고';

COMMENT ON COLUMN Grade_Information.SubscriptionPrice IS '구독 가격';

CREATE UNIQUE INDEX PK_Grade_Information
	ON Grade_Information (
		MemberGrade ASC
	);

ALTER TABLE Grade_Information
	ADD
		CONSTRAINT PK_Grade_Information
		PRIMARY KEY (
			MemberGrade
		);
		
		ALTER TABLE Member
	DROP
		UNIQUE (
			Nickname
		)
		CASCADE
		KEEP INDEX;

DROP INDEX UIX_Member;

DROP INDEX PK_Member;

/* 회원 */
DROP TABLE Member 
	CASCADE CONSTRAINTS;

/* 회원 */
CREATE TABLE Member (
	MemberID VARCHAR2(24 BYTE) NOT NULL, /* 회원ID */
	Password VARCHAR2(12 BYTE) NOT NULL, /* 비밀번호 */
	MemberGrade VARCHAR2(1 BYTE) NOT NULL, /* 회원 등급 */
	MemberName VARCHAR2(60 BYTE) NOT NULL, /* 회원 이름 */
	Email VARCHAR2(50 BYTE) NOT NULL, /* 이메일 */
	Nickname VARCHAR2(24 BYTE) NOT NULL, /* 닉네임 */
	JoinDate DATE DEFAULT SYSDATE, /* 가입 일시 */
	UpdateDate DATE, /* 수정 일시 */
	IsVerified VARCHAR2(1 BYTE) NOT NULL /* 인증 여부 */
);

COMMENT ON TABLE Member IS '회원';

COMMENT ON COLUMN Member.MemberID IS '회원ID';

COMMENT ON COLUMN Member.Password IS '비밀번호';

COMMENT ON COLUMN Member.MemberGrade IS '회원 등급';

COMMENT ON COLUMN Member.MemberName IS '회원 이름';

COMMENT ON COLUMN Member.Email IS '이메일';

COMMENT ON COLUMN Member.Nickname IS '닉네임';

COMMENT ON COLUMN Member.JoinDate IS '가입 일시';

COMMENT ON COLUMN Member.UpdateDate IS '수정 일시';

COMMENT ON COLUMN Member.IsVerified IS '인증 여부';

CREATE UNIQUE INDEX PK_Member
	ON Member (
		MemberID ASC
	);

CREATE UNIQUE INDEX UIX_Member
	ON Member (
		Nickname ASC
	);

ALTER TABLE Member
	ADD
		CONSTRAINT PK_Member
		PRIMARY KEY (
			MemberID
		);

ALTER TABLE Member
	ADD
		CONSTRAINT UK_Member
		UNIQUE (
			Nickname
		);

ALTER TABLE Member
	ADD
		CONSTRAINT FK_Grade_Information_TO_Member
		FOREIGN KEY (
			MemberGrade
		)
		REFERENCES Grade_Information (
			MemberGrade
		);
		
		DROP INDEX PK_Subscription_Member_List;

/* 구독자 리스트 */
DROP TABLE Subscription_Member_List 
	CASCADE CONSTRAINTS;

/* 구독자 리스트 */
CREATE TABLE Subscription_Member_List (
	SubscriptionSEQ NUMBER(10) NOT NULL, /* 구독SEQ */
	MemberGrade VARCHAR2(1 BYTE) NOT NULL, /* 회원 등급 */
	MemberID VARCHAR2(24 BYTE) NOT NULL, /* 회원ID */
	SubscriptionStartDate DATE DEFAULT SYSDATE NOT NULL, /* 구독 시작일 */
	SubscriptionEndDate DATE DEFAULT SYSDATE NOT NULL /* 구독 종료일 */
);

COMMENT ON TABLE Subscription_Member_List IS '구독자 리스트';

COMMENT ON COLUMN Subscription_Member_List.SubscriptionSEQ IS '구독SEQ';

COMMENT ON COLUMN Subscription_Member_List.MemberGrade IS '회원 등급';

COMMENT ON COLUMN Subscription_Member_List.MemberID IS '회원ID';

COMMENT ON COLUMN Subscription_Member_List.SubscriptionStartDate IS '구독 시작일';

COMMENT ON COLUMN Subscription_Member_List.SubscriptionEndDate IS '구독 종료일';

CREATE UNIQUE INDEX PK_Subscription_Member_List
	ON Subscription_Member_List (
		SubscriptionSEQ ASC
	);

ALTER TABLE Subscription_Member_List
	ADD
		CONSTRAINT PK_Subscription_Member_List
		PRIMARY KEY (
			SubscriptionSEQ
		);

ALTER TABLE Subscription_Member_List
	ADD
		CONSTRAINT FK_Member_TO_Subscription_Member_List
		FOREIGN KEY (
			MemberID
		)
		REFERENCES Member (
			MemberID
		);
		
		DROP INDEX PK_Board_Comment;

DROP INDEX PK_Board_Comment;

/* 댓글 */
DROP TABLE Board_Comment 
	CASCADE CONSTRAINTS;

/* 댓글 */
CREATE TABLE Board_Comment (
	CommentNumber NUMBER(10) NOT NULL, /* 댓글 번호 */
	Nickname VARCHAR2(24 BYTE) NOT NULL, /* 닉네임 */
	Content CLOB NOT NULL, /* 내용 */
	Likes NUMBER(10) DEFAULT 0, /* 추천수 */
	WrittenDate DATE DEFAULT SYSDATE, /* 작성일 */
	PostNumber NUMBER(10) NOT NULL, /* 글번호 */
	MemberID VARCHAR2(24 BYTE) NOT NULL /* 회원ID */
);

COMMENT ON TABLE Board_Comment IS '댓글';

COMMENT ON COLUMN Board_Comment.CommentNumber IS '댓글 번호';

COMMENT ON COLUMN Board_Comment.Nickname IS '닉네임';

COMMENT ON COLUMN Board_Comment.Content IS '내용';

COMMENT ON COLUMN Board_Comment.Likes IS '기본값 0';

COMMENT ON COLUMN Board_Comment.WrittenDate IS '작성일';

COMMENT ON COLUMN Board_Comment.PostNumber IS '글번호';

COMMENT ON COLUMN Board_Comment.MemberID IS '회원ID';

CREATE UNIQUE INDEX PK_Board_Comment
	ON Board_Comment (
		CommentNumber ASC
	);

ALTER TABLE Board_Comment
	ADD
		CONSTRAINT PK_Board_Comment
		PRIMARY KEY (
			CommentNumber
		);

ALTER TABLE Board_Comment
	ADD
		CONSTRAINT FK_Board_TO_Board_Comment
		FOREIGN KEY (
			PostNumber
		)
		REFERENCES Board (
			PostNumber
		);

ALTER TABLE Board_Comment
	ADD
		CONSTRAINT FK_Member_TO_Board_Comment
		FOREIGN KEY (
			MemberID
		)
		REFERENCES Member (
			MemberID
		);

/* 이용약관 */
DROP TABLE Agreement 
	CASCADE CONSTRAINTS;

/* 이용약관 */
CREATE TABLE Agreement (
	TermsCode NUMBER(1) NOT NULL, /* 약관항목 코드 */
	TermsContent CLOB NOT NULL, /* 약관내용 */
	IsRequired VARCHAR2(1 BYTE) NOT NULL, /* 필수여부 */
	WrittenDate DATE DEFAULT SYSDATE, /* 작성일 */
	UpdateDate DATE DEFAULT SYSDATE
);

COMMENT ON TABLE Agreement IS '이용약관';

COMMENT ON COLUMN Agreement.TermsCode IS '약관항목 코드';

COMMENT ON COLUMN Agreement.TermsContent IS '약관내용';

COMMENT ON COLUMN Agreement.IsRequired IS '필수여부';

COMMENT ON COLUMN Agreement.WrittenDate IS '작성일';

COMMENT ON COLUMN Agreement.UpdateDate IS '수정 일시';

CREATE UNIQUE INDEX PK_Agreement
	ON Agreement (
		TermsCode ASC
	);

ALTER TABLE Agreement
	ADD
		CONSTRAINT PK_Agreement
		PRIMARY KEY (
			TermsCode
		);
		
		DROP INDEX PK_Agreement_History;

/* 약관동의이력 */
DROP TABLE Agreement_History 
	CASCADE CONSTRAINTS;

/* 약관동의이력 */
CREATE TABLE Agreement_History (
	TermsCode NUMBER(1) NOT NULL, /* 약관항목 코드 */
	MemberID VARCHAR2(24 BYTE) NOT NULL, /* 회원ID */
	AgreementStatus VARCHAR2(1 BYTE) NOT NULL, /* 동의여부 */
	AgreementDate DATE DEFAULT SYSDATE
);

COMMENT ON TABLE Agreement_History IS '약관동의이력';

COMMENT ON COLUMN Agreement_History.TermsCode IS '약관항목 코드';

COMMENT ON COLUMN Agreement_History.MemberID IS '회원ID';

COMMENT ON COLUMN Agreement_History.AgreementStatus IS '동의여부';

COMMENT ON COLUMN Agreement_History.AgreementDate IS '동의일시';

CREATE UNIQUE INDEX PK_Agreement_History
	ON Agreement_History (
		TermsCode ASC,
		MemberID ASC
	);

ALTER TABLE Agreement_History
	ADD
		CONSTRAINT PK_Agreement_History
		PRIMARY KEY (
			TermsCode,
			MemberID
		);

ALTER TABLE Agreement_History
	ADD
		CONSTRAINT FK_Agreement_TO_Agreement_History
		FOREIGN KEY (
			TermsCode
		)
		REFERENCES Agreement (
			TermsCode
		);

ALTER TABLE Agreement_History
	ADD
		CONSTRAINT FK_Member_TO_Agreement_History
		FOREIGN KEY (
			MemberID
		)
		REFERENCES Member (
			MemberID
		);

DROP INDEX PK_Payment_Information;

/* 결제 정보 */
DROP TABLE Payment_Information 
	CASCADE CONSTRAINTS;

/* 결제 정보 */
CREATE TABLE Payment_Information (
	PaymentInfoSEQ NUMBER(10) NOT NULL, /* 결제 정보 SEQ */
	PG VARCHAR2(70 BYTE) NOT NULL, /* 결제할 지점 이름 */
	Pay_Method VARCHAR2(24 BYTE) NOT NULL, /* 결제 방법 */
	Merchant_Uid VARCHAR2(30 BYTE) NOT NULL, /* 주문번호 */
	Name VARCHAR2(30 BYTE) DEFAULT SYSDATE NOT NULL, /* 구매할 상품명 */
	Amount NUMBER(7) NOT NULL, /* 구매할 가격 */
	Buyer_Email VARCHAR2(50 BYTE) NOT NULL, /* 소비자 이메일 */
	Buyer_Name VARCHAR2(60 BYTE) NOT NULL, /* 소비자 이름 */
	Buyer_Tel VARCHAR2(20 BYTE) NOT NULL, /* 소비자 전화번호 */
	M_Redirect_Url VARCHAR2(100 BYTE) NOT NULL /* URL */
);

COMMENT ON TABLE Payment_Information IS '결제 정보';

COMMENT ON COLUMN Payment_Information.PaymentInfoSEQ IS '결제 정보 SEQ';

COMMENT ON COLUMN Payment_Information.PG IS '결제할 지점 이름';

COMMENT ON COLUMN Payment_Information.Pay_Method IS '결제 방법';

COMMENT ON COLUMN Payment_Information.Merchant_Uid IS '주문번호';

COMMENT ON COLUMN Payment_Information.Name IS '구매할 상품명';

COMMENT ON COLUMN Payment_Information.Amount IS '구매할 가격';

COMMENT ON COLUMN Payment_Information.Buyer_Email IS '소비자 이메일';

COMMENT ON COLUMN Payment_Information.Buyer_Name IS '소비자 이름';

COMMENT ON COLUMN Payment_Information.Buyer_Tel IS '소비자 전화번호';

COMMENT ON COLUMN Payment_Information.M_Redirect_Url IS 'URL';

CREATE UNIQUE INDEX PK_Payment_Information
	ON Payment_Information (
		PaymentInfoSEQ ASC
	);

ALTER TABLE Payment_Information
	ADD
		CONSTRAINT PK_Payment_Information
		PRIMARY KEY (
			PaymentInfoSEQ
		);

DROP INDEX PK_Payment_Logs;

/* 결제 관련 로그 */
DROP TABLE Payment_Logs 
	CASCADE CONSTRAINTS;

/* 결제 관련 로그 */
CREATE TABLE Payment_Logs (
	PaymentLogSEQ NUMBER(10) NOT NULL, /* 결제 로그 SEQ */
	PaymentInfoSEQ NUMBER(10) NOT NULL, /* 결제 정보 SEQ */
	PaymentAttemptLog CLOB NOT NULL, /* 결제 시도 로그 */
	PaymentResultLog CLOB NOT NULL, /* 결제 성공/실패 로그 */
	LogDate DATE DEFAULT SYSDATE
);

COMMENT ON TABLE Payment_Logs IS '결제 관련 로그';

COMMENT ON COLUMN Payment_Logs.PaymentLogSEQ IS '결제 로그 SEQ';

COMMENT ON COLUMN Payment_Logs.PaymentInfoSEQ IS '결제 정보 SEQ';

COMMENT ON COLUMN Payment_Logs.PaymentAttemptLog IS '결제 시도 로그';

COMMENT ON COLUMN Payment_Logs.PaymentResultLog IS '결제 성공/실패 로그';

COMMENT ON COLUMN Payment_Logs.LogDate IS '로그 일시';

CREATE UNIQUE INDEX PK_Payment_Logs
	ON Payment_Logs (
		PaymentLogSEQ ASC
	);

ALTER TABLE Payment_Logs
	ADD
		CONSTRAINT PK_Payment_Logs
		PRIMARY KEY (
			PaymentLogSEQ
		);

ALTER TABLE Payment_Logs
	ADD
		CONSTRAINT FK_Payment_Information_TO_Payment_Logs
		FOREIGN KEY (
			PaymentInfoSEQ
		)
		REFERENCES Payment_Information (
			PaymentInfoSEQ
		);




   --게시글 번호
    CREATE SEQUENCE INVISIBLEHAND.POSTNUMBER
    increment by 1
    START With 1
    Minvalue 1
    maxvalue 9999999999
    cycle
    order;
    
    --댓글 번호
    CREATE SEQUENCE INVISIBLEHAND.COMMENTNUMBER
    increment by 1
    START With 1
    Minvalue 1
    maxvalue 9999999999
    cycle
    order;
    
    --결제 정보 seq    
    CREATE SEQUENCE INVISIBLEHAND.PAYMENTINFOSEQ
    increment by 1
    START With 1
    Minvalue 1
    maxvalue 9999999999
    cycle
    order;
    
    --결제 로그 seq
    CREATE SEQUENCE INVISIBLEHAND.PAYMENTLOGSEQ
    increment by 1
    START With 1
    Minvalue 1
    maxvalue 9999999999
    cycle
    order;
    
    --구독 정보 seq
    CREATE SEQUENCE INVISIBLEHAND.SUBSCRIPTIONSEQ
    increment by 1
    START With 1
    Minvalue 1
    maxvalue 9999999999
    cycle
    order;


