<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
  <!-- LocaleChangeInterceptor 등록, id생략 -->
  <mvc:interceptors>
	  <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
	    <property name="paramName" value="lang"></property> <!-- lang파라메터로 Locale이 전송되면 해당 Locale로 변경 하겠다.ㅣ-->
	  </bean>
  </mvc:interceptors>
  

  
  <!-- LocaleResolver 등록, id="localeResolver" 고정 -->
  <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
  
  </bean>
    
  <!-- 다국어.메세지: id="messageSource" 고정 -->  
  <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    <property name="basenames">
       <list>
         <value>message.messageSource</value> <!-- 파일이름에 local이 생략되어 있음. -->
       </list>
    </property>
    <property name="cacheSeconds">
       <value>60</value> <!-- 60초동안 캐시 -->
    </property>
  </bean>  
    
  <!-- 파일업로드 
    "multipartResolver" : 이름 변경하면 않됨!
     maxUploadSize: 최대 업로드 간능한 크기 (default=-1 제한없음), 단위는 byte
     maxInMemorySize: 디스크에 임시 파일을 생성하기 전에 메모리에 보관할수 있는 최대 바이트 크기. default 10240바이트
     
  -->  
  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="defaultEncoding" value="UTF-8"/>
    <property name="maxUploadSize"   value="52428800"/>
    <property name="maxInMemorySize" value="52428800"/>
  </bean>
  
  
  <!-- 예외처리 -->
<!--   <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    <property name="exceptionMappings">
      <props>
        <prop key="java.lang.IllegalArgumentException">
           cmn/illeaglArgumentException
        </prop>
        <prop key="java.lang.NullPointerException">
           cmn/nullPointerException
        </prop>        
      </props>
    </property>
    <property name="defaultErrorView" value="cmn/error"></property>
  </bean> -->
  
  <!-- mybatis설정 -->
  <!-- mybatis db연결 객체 -->
  <bean  id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
  <!--sqlSessionFactoryBean: mybatis설정 파일 read  -->
    <constructor-arg index="0" ref="sqlSessionFactoryBean"></constructor-arg>
  </bean>
  <!-- *.xml mybatis설정 파일 read
    mybatis-config.xml
    mapper: anno.xml
   -->  
  <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="configLocation" value="classpath:mybatis-config.xml"/>
    <property name="mapperLocations" value="classpath:mapper/**/*.xml"></property>
  </bean>  
    
  <!-- 트랜잭션 어드바이스 설정 
     지금까지 Advice는 직접 구현 했었다. 하지만 트랜잭션 관리 기능의 어드바이스는 직접 구현하지 않는다.
    스프링 컨테이너가 <tx:advice를 참조 해서 자동 생성한다.
  --> 
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
       <tx:attributes>
         <!-- do*로 시작하는 메서드는 트랜잭션관리 대상에서 제외 -->
         <tx:method name="do*" read-only="true" />
         <!-- up*시작하는 메서드는 트랜잭션 관리 대상이다. -->
         <tx:method name="up*" read-only="false" rollback-for="Excetion"/>
       </tx:attributes>
    </tx:advice>
    
    <!-- pointcut+adice = adviser 
         * com.pcwk.ehr.업무.service.*Impl.up*(..)
    -->
    <aop:config>
        <aop:pointcut expression="execution(* com.pcwk.ehr..service.*Impl.up*(..))" id="txPointCut"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
    </aop:config>
  
  
  <!-- mybatis log 
  <bean id="sqlLoggingAspect" class="com.pcwk.ehr.aspect.SqlLoggingAspect"/>-->
  
<!-- <aop:config>
  <aop:aspect ref="sqlLoggingAspect">
    <aop:before method="logBefore"
     pointcut="execution(* com.pcwk.ehr..*DaoImpl.*(..))"/>
  </aop:aspect>

</aop:config>   -->
  
  <!-- DataSourceTransactionManager -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
  
  <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
    <property name="dataSource" ref="dataSource"></property>
  </bean>
  
  
    <!-- 성능측정 -->
    <!-- 
  <aop:config>
      <aop:pointcut expression="execution(* com.pcwk.ehr..*Impl.notRun*(..))" id="allPointCut"/>
    <aop:aspect ref="aroundAdvice">
        <aop:around method="performanceAdvice" pointcut-ref="allPointCut"/>
    </aop:aspect>
  
  </aop:config>
  -->
  
 
  <!-- 개발용  DummyMailSender-->
  <bean id="dummyMailSender" class="com.pcwk.ehr.service.DummyMailSender"></bean>
    

    
     <!-- JavaMailSenderImpl -->
  <bean id="mailSenderImpl"
    class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="host" value="smtp.naver.com" />
    <property name="port" value="465" />
    <property name="username" value="kjmin1124@naver.com" />
    <property name="password" value="132428lpp." />
    <property name="defaultEncoding" value="utf-8" />
    <property name="javaMailProperties">
      <props>
        <prop key="mail.smtp.host">smtp.naver.com</prop>
        <prop key="mail.smtp.port">465</prop>
        <prop key="mail.smtp.auth">true</prop>
        <prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
        <prop key="mail.smtp.ssl.enable">true</prop>
        <prop key="mail.smtp.ssl.trust">smtp.naver.com</prop>
        <prop key="mail.debug">true</prop>
      </props>
    </property>
  </bean>

    
    

   
    <!-- 등업  -->
<!--   <bean id="userService" class="com.pcwk.ehr.user.service.UserServiceImpl">        
    <property name="dataSource" ref="dataSource"/>
    <property name="transactionManager" ref="transactionManager" />
    <property name="mailSender" ref="mailSenderImpl"/>
    
    <property name="mailSender" ref="dummyMailSender"/>
    
  </bean> -->
  

  
  <!-- database.properties -->
  <context:property-placeholder location="classpath:/resource/config/database.properties"/>
  <!-- Connection Pool -->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName" value="${jdbc.driver}"/>
      <property name="url" value="${jdbc.url}"/>
      <property name="username" value="${jdbc.username}"/>
      <property name="password" value="${jdbc.password}"/>
      <!-- 최대 접속 허용 갯수 -->
    <property name="maxActive" value="${jdbc.maxActive}"/>
    
    <!-- 여분으로 남겨질 Connection -->
    <property name="maxIdle"   value="${jdbc.maxIdle}"/>
    
    <!-- DB연결 대기시간 -->
    <property name="maxWait"   value="${jdbc.maxWait}"/>
    
  </bean>
</beans>