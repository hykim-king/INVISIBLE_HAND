<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcwk.ehr.main">
  
<!--   <update id="doUpdateViews" parameterType="PostVO">
      UPDATE board           
      SET views   = NVL(views,0)+1   
      WHERE postNumber = #{postNumber}
      AND categoryNumber = #{categoryNumber}
   
  </update> -->

  <select id="chartGraph" parameterType="ChartVO" resultType="ChartVO">
			SELECT
			    chartseq,
			    year,
			    one,
			    two,
			    three
			FROM
			    chart
			ORDER BY chartseq

  </select>
      
  <select id="doRetrieve" parameterType="PostVO" resultType="PostVO">
		<![CDATA[
		SELECT A.*, B.*
		FROM (
		  SELECT TT1.rnum as num,
		         TT1.title,
		         TT1.categoryNumber,
		         TT1.views,
		         TT1.likes,
		         CASE
		           WHEN TRUNC(TT1.writtenDate) = TRUNC(SYSDATE) THEN TO_CHAR(TT1.writtenDate, 'HH24:MI')
		           ELSE TO_CHAR(TT1.writtenDate, 'YYYY/MM/DD')
		         END AS writtenDate,
		         TT1.nickname,
		         TT1.postNumber
		  FROM (
		    SELECT ROWNUM as rnum, t1.*
		    FROM (
		      SELECT *
		      FROM board
		      WHERE categoryNumber = #{categoryNumber}
		      ORDER BY likes DESC
		    ) t1
		       WHERE ROWNUM >= 1
		  ) TT1  
		 WHERE rnum <=5
		) A
		CROSS JOIN (
		  SELECT COUNT(postNumber) totalCnt
		  FROM board
		  WHERE categoryNumber = #{categoryNumber}
		) B	]]>	
  </select>
  
              <!-- 랭킹 관련 sql -->
  
	  <!-- 1. 랭킹 정보 main 화면에 출력할 로직 -->
	<select id="doGetRanking" parameterType="RankVO" resultType="RankVO">
		 SELECT
		    rownum as No,
			  name,
			  current_rank,
			 (PREVIOUS_RANK - CURRENT_RANK) as change_rank
		 FROM RANKING
	</select>  
	  
	  <!-- 2. 설문이 성공적으로 return시 선택한 업종의 score에  +1 -->
	<update id="doUpdateScore" parameterType="RankVO">
	   UPDATE Ranking
		 SET score = NVL(score,0) + 1 
		 WHERE name = #{name}
	</update>
	
	  <!-- 3. 이전 랭킹과 현재 랭킹을 기록  -->
	    <!-- 3.1 현재 랭킹을 이전 랭킹에 기록 -->
	<update id="doUpdatePrevious" parameterType="RankVO">
	   UPDATE Ranking 
	   SET previous_rank = current_rank
	</update>
	
	    <!-- 3.2 현재 랭킹을 score에 의해 랭킹 업데이트-->
  <update id="doUpdateCurrent" parameterType="RankVO">
     UPDATE Ranking
     SET current_rank = 
       (
		    SELECT new_rank
		    FROM (
		        SELECT
		            name,
		            RANK() OVER (ORDER BY score DESC) AS new_rank
		        FROM Ranking
		    ) source
		    WHERE source.name = Ranking.name
		    ),
    RANKING_UPDATE = SYSDATE;
  </update>
  
          <!-- 랭킹 관련 sql END -->
</mapper>